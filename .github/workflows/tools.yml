name: Tools validation

on:
  workflow_dispatch:
    inputs:
      reason:
        type: string
        default: manual healthcheck
        required: true

  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/tools.yml'
      - 'tools/**.go'
      - 'tools/go.{mod,sum}'
      - 'Makefile'

  push:
    branches: [ main ]
    paths:
      - '.github/workflows/tools.yml'
      - 'tools/**.go'
      - 'tools/go.{mod,sum}'
      - 'Makefile'
    tags: [ '!*' ]

  schedule:
    - name: At 07:00 on day-of-month 1, UTC
      cron: 0 7 1 * *

jobs:
  check:
    name: Checking
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Set up Go environment
        uses: actions/setup-go@v4
        with: { go-version: 1.20.x, cache-dependency-path: tools/go.sum, check-latest: true }

      - name: Install and check tools
        run: make tools && [ $(ls bin/linux/*/* | wc -l) = $(grep go:gen tools/tools.go | wc -l) ]

      - name: Check git state
        run: make generate git-check

  notify:
    name: Notifying
    needs: [ check ]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && (failure() || success())

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Define notification message
        id: message
        uses: ./.github/actions/notify

      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        continue-on-error: true
        env:
          SLACK_COLOR: ${{ contains(needs.*.result, 'failure') && 'failure' || 'success' }}
          SLACK_FOOTER: made with ‚ù§Ô∏è for everyone by OctoLab
          SLACK_ICON: https://github.com/github.png?size=64
          SLACK_MESSAGE: ${{ steps.message.outputs.txt }}
          SLACK_TITLE: 'üõ†Ô∏è ${{ github.repository }}: ${{ github.workflow }}'
          SLACK_USERNAME: GitHub Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
