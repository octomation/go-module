name: Documentation delivery

on:
  workflow_dispatch:
    inputs:
      reason:
        type: string
        default: manual healthcheck
        required: true

  push:
    branches: [ main ]
    paths:
      - '.github/workflows/docs.yml'
      - 'docs/**/*'
    tags: [ '!*' ]

  schedule:
    - name: At 07:00 on day-of-month 1, UTC
      cron: 0 7 1 * *

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    name: Building
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with: { node-version: 16 }
      - name: Set up GitHub Pages
        uses: actions/configure-pages@v3

      - name: Cache documentation dependencies
        id: docs
        uses: actions/cache@v3
        with:
          path: ./docs/node_modules
          key: docs-${{ hashFiles('docs/package-lock.json') }}
      - name: Install documentation dependencies if needed
        run: ./Taskfile docs install
        if: steps.docs.outputs.cache-hit != 'true'

      - name: Build static HTML with Next.js
        run: ./Taskfile docs publish
      - name: Upload the documentation
        uses: actions/upload-pages-artifact@v1
        with: { path: docs/dist }

  deploy:
    name: Deploying
    needs: [ build ]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      id-token: write
      pages: write

    steps:
      - name: Deploy it to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  notify:
    name: Notifying
    needs: [ build, deploy ]
    runs-on: ubuntu-latest
    if: failure() || success()

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Define notification message
        id: message
        uses: ./.github/actions/notify

      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        continue-on-error: true
        env:
          SLACK_COLOR: ${{ contains(needs.*.result, 'failure') && 'failure' || 'success' }}
          SLACK_FOOTER: made with ‚ù§Ô∏è for everyone by OctoLab
          SLACK_ICON: https://github.com/github.png?size=64
          SLACK_MESSAGE: ${{ steps.message.outputs.txt }}
          SLACK_TITLE: 'üìö ${{ github.repository }}: ${{ github.workflow }}'
          SLACK_USERNAME: GitHub Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
