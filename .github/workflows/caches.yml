name: Cache invalidation

on:
  workflow_dispatch:
    inputs:
      reason:
        type: string
        default: manual healthcheck
        required: true

  schedule:
    - name: At 06:00 on day-of-month 1, UTC
      cron: 0 6 1 * *

jobs:
  delete:
    name: Deleting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }

      - name: Install a GitHub CLI cache extension
        run: gh extension install actions/gh-actions-cache
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Cleanup caches
        run: |
          keys=$(gh actions-cache list -L 100 -R '${{ github.repository }}' | cut -f1)
          if [ -z "${keys}" ]; then echo 'Nothing to do' && exit 0; fi

          echo Deleting caches...
          for key in ${keys}; do
            gh actions-cache delete "${key}" -R '${{ github.repository }}' --confirm || true
          done
          echo Done
        env:
          GITHUB_TOKEN: ${{ github.token }}

  notify:
    name: Notifying
    needs: [ delete ]
    runs-on: ubuntu-latest
    if: failure() || success()

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Define notification message
        id: message
        uses: ./.github/actions/notify

      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        continue-on-error: true
        env:
          SLACK_COLOR: ${{ contains(needs.*.result, 'failure') && 'failure' || 'success' }}
          SLACK_FOOTER: made with ‚ù§Ô∏è for everyone by OctoLab
          SLACK_ICON: https://github.com/github.png?size=64
          SLACK_MESSAGE: ${{ steps.message.outputs.txt }}
          SLACK_TITLE: 'üßπ ${{ github.repository }}: ${{ github.workflow }}'
          SLACK_USERNAME: GitHub Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
