name: Cache warmup

on:
  workflow_dispatch:
    inputs:
      reason:
        description: The reason for dispatching it manually.
        type: string
        default: manual healthcheck
        required: true

  schedule:
    - cron: 30 6 1 * * # at 06:30 on day-of-month 1, UTC

jobs:
  deps:
    name: Caching deps
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        go:
          - 1.x
          - 1.19.x
          - 1.20.x

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Set up Go environment
        uses: actions/setup-go@v4
        with: { go-version: '${{ matrix.go }}', check-latest: true }
      - name: Set up environment
        run: make env deps

  tools:
    name: Caching tools
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Set up Go environment
        uses: actions/setup-go@v4
        with: { go-version: 1.20.x, cache-dependency-path: tools/go.sum, check-latest: true }
      - name: Set up environment
        run: make env tools

  notify:
    name: Notifying
    needs: [ deps, tools ]
    runs-on: ubuntu-latest
    if: failure() || success()

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Define notification message
        id: message
        uses: ./.github/actions/notify

      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        continue-on-error: true
        env:
          SLACK_COLOR: ${{ contains(needs.*.result, 'failure') && 'failure' || 'success' }}
          SLACK_FOOTER: made with ❤️ for everyone by OctoLab
          SLACK_ICON: https://github.com/github.png?size=64
          SLACK_MESSAGE: ${{ steps.message.outputs.txt }}
          SLACK_TITLE: '♻️ ${{ github.repository }}: ${{ github.workflow }}'
          SLACK_USERNAME: GitHub Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
